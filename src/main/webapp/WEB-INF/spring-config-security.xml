<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" 
    xmlns:beans="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">
    <!-- HTTP security configurations -->
    <http auto-config="false" use-expressions="true">
        <form-login login-page="/loginUri" authentication-failure-url="/loginUri?failed=true" username-parameter="userNameParam" password-parameter="userPasswordParam"/>
        <!-- Configure these elements to secure URIs in your application -->
        <intercept-url pattern="/loginUri/**" access="permitAll" />
        <intercept-url pattern="/logout/**" access="permitAll" />
        <intercept-url pattern="/forgotPassword/**" access="permitAll" />
        <intercept-url pattern="/client/**" access="permitAll"/>
        <intercept-url pattern="/home/**" access="permitAll" />
        
        <intercept-url pattern="/users/**" access="hasRole('ADMIN')"/>
        <intercept-url pattern="/categories/**" access="hasRole('ADMIN')"/>
        <intercept-url pattern="/events/**" access="hasRole('ADMIN')"/>
        <intercept-url pattern="/artists/**" access="hasRole('ADMIN')" />
        
        <intercept-url pattern="/tickets/**" access="hasRole('NORMAL')" />

        <access-denied-handler error-page="/WEB-INF/jsp/error.jsp"/>
        
	    <session-management session-fixation-protection="migrateSession" session-authentication-error-url="/loginFailUri"> 
	        <concurrency-control max-sessions="1" error-if-maximum-exceeded="true" expired-url="/logoutUri" session-registry-alias="sessionRegistry"/>
	    </session-management>
    </http>
    <!-- Configure Authentication mechanism -->
	
    <beans:bean id="customAuthenticationProvider" class="events.authentication.Authenticate"/>
    <authentication-manager alias="authenticationManager">
         <authentication-provider ref="customAuthenticationProvider"/>
    </authentication-manager>
</beans:beans>